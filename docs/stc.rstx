========
GAVO STC
========

A library to process VO STC specifications
========================================================================

This library aims to ease processing specifications of space-time
coordindates (STC) according to the IVOA STC data model with the XML and
string serializations.  Note that it is at this point an early beta at
best.

More specifically, it is inteded to help in:

* supporting ADQL region specifications
* generating registry coverage specifications from simple STC-S

As the dust settles around embedding STC in VOTable, we will support
this as well.


Installation
------------

If you are running Debian stable, see `Adding the GAVO repository to
your sources`_ and use our packages.  After that, simply say::

  aptitude install python-gavostc

If you do not have a dpkg-based system, you will have to install the
source distribution.  Unpack the .tar.gz and run::

  python setup.py install

You will normally need to do this as root for a system-wide
installation.  There are, however, alternatives, first and foremost a
`virtual python` that will keep your managed directories clean.

This library's setup is based on setuptools.  Thus, it will generally
obtain all necessary dependencies from the net.  For this to be
successful, you will have net access.

If all this bothers you, contact the authors.


Usage
-----

Command Line
''''''''''''

For experiments, we provide a simple command line tool.  Try::

  gavostc help

so see what operations we expose through the command line tool.


Programmatic
''''''''''''

The library is written in python, and thus currently can only be
operated from python programs.  It should not be too hard to embed it
into C or even Java programs.  If you have such needs, contact the
author.


Limitations
-----------

* No unions, intersections and such.  This will be (at least partially)
  fixed as soon as there is a specification on how to serialize that
  into STC-S.
* On system transformations, ellipses are not rotated, just moved.  No
  "wiggles" (errors, etc) are touched at all.
* Reference positions are not supported in any meaningful way.  In
  particular, when transforming STCs, transformations between all
  reference positions are identities.  This won't hurt much for galactic
  or extragalactic objects but of course makes the whole thing useless
  for solar-system work.  I'm willing to put some work into this if
  there's any demand.
* No handling of cos(delta) on proper motions in RA is implemented; it
  is unclear to me what STC's stance on this is.  This is particularly
  bad when transforming PMs.
* The behaviour of some transforms (in particular FK5<->FK4) close to
  the poles need some attention.
* External references (xlink:href and friends) are not supported.
* Empty coordinate values (e.g., 2D data with just one coordinate) are not
  really supported.  Processing them will, in general, work, but will,
  in general, not yield the expected result.  This is fixable, but may
  require changes in the data model.
* No generic coordinates.  Those can probably be added relatively
  easily, but it would definitely help if someone had a clear use case
  for them
* Spectral errors and their "wiggles" (error, size, etc) must be in the
  same "flavor", i.e., either frequency, wavelength, or energy.  If they
  are not, the library will silently failed.  This is easily fixable,
  but there's too much special casing in the code as is, and I consider
  this a crazy corner case no one will encounter.
* No reference on posAngles, always assumed to be 'X'.
* Units on subordinate objects (center, posAngle, etc.) are currently
  ignored.  This will be fixed by making units identical to the
  underlying object as far as possible at some point.
* Spatial intervals are system-conformed analogous to geometries, so any
  distance information is disregaded.  This will be fixed on request.
* VelocityIntervals are not system-conformed at all.  This will be fixed
  on request.
* No support for Area.
* Frame handling currently is a big mess; in particular, the system
  changing functions *assume* that the frames on positions, velocities and
  geometries are identical.  I'll probably more towards requiring
  astroCoords being in astroSystem.


Extensions to STC-S
-------------------

* After ECLIPTIC, FK4, or FK5, an equinox specification is allowed.  This is 
  either J<number> or B<number>.
* For velocities, arbitrary combinations of spaceUnit/timeUnit are
  allowed.

Other Deviations from the Standard
----------------------------------

* Units on geometries default to deg, deg when parsing from STC-X.
* The equinox to be used for ECLIPTIC isn't quite clear from the specs.
  The library will use a specified equinox if given, else the time value
  if given, else the equinox will be None (which probably is not
  terribly useful).

Bugs
----

* Conversions between TT and TCB are performed using the rough
  approximation of the explanatory supplement rather than the more
  exact expression.



.. `Adding the GAVO repository to your sources`: http://vo.ari.uni-heidelberg.de/docs/repository.html
